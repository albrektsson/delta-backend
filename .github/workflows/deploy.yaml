on:
  push:
    branches:
      - main

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - uses: github/codeql-action/init@v2
        with:
          languages: kotlin

      - uses: actions/setup-java@v3
        id: setup-java
        with:
          distribution: "temurin"
          java-version: "17"

      - run: ./gradlew shadowJar -x test
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}

      - uses: github/codeql-action/analyze@v2
        with:
          category: "/language:kotlin"

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: "write"
      contents: "read"
      id-token: "write"
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      id: setup-java
      with:
        distribution: 'temurin'
        java-version: '17'
    - uses: gradle/wrapper-validation-action@v1.0.6
      id: gradle-wrapper-validation
    - uses: actions/cache@v3
      id: gradle-cache
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/.*gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Build jar
      env:
        ORG_GRADLE_PROJECT_githubUser: x-access-token
        ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: |
        ./gradlew shadowJar -x test
    - name: Push docker image to GAR
      uses: nais/docker-build-push@v0
      id: docker-build-push
      with:
        team: delta
        identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} # Provided as Organization Secret
        project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }} # Provided as Organization Variable
  deploy-dev:
    name: Deploy to dev
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais-dev.yaml
          VAR: image=${{ needs.build.outputs.image }}
